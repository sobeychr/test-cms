@use '@t-styles/templates.scss' as tTemplates;

$GAP: 0.8rem;

@keyframes animLoading {
  0% {
    rotate: 0deg;
  }

  100% {
    rotate: 360deg;
  }
}


.body {
  list-style: none;
  margin: 0;
  padding: 0 0 0 $GAP;
}

.entry {
  display: grid;
  font-size: 0.8rem;
  grid-template-areas:
    'uuid uuid uuid'
    'pathname pathname pathname'
    'delay start end';
  margin-top: $GAP;

  p {
    margin-bottom: 0.3em;
  }

  .delay {
    grid-area: delay;

    .value::after {
      content: 'ms';
    }
  }

  .start {
    grid-area: start;
  }

  .end {
    grid-area: end;
  }

  .pathname {
    color: #7b4ae2;
    grid-area: pathname;
  }

  .value {
    margin-left: 0.3em;

    &:global(.low) {
      color: #4ae28a;
    }

    &:global(.medium) {
      color: #ede61a;
    }

    &:global(.high) {
      color: #ed1a1d;
    }
  }

  .uuid {
    // color: #4ad1e2;
    color: #6791d3;
    grid-area: uuid;
  }
}

.section {
  margin: 1.2rem;
}

section {
  header span {
    font-size: 0.7em;
    font-style: italic;
    font-weight: normal;
    margin-left: 0.5em;
  }
}

section:global(#requests) {
  header {
    cursor: pointer;
  }

  &:not(:has(ul:empty)) header span::after {
    display: none;
  }

  &:has(ul:empty) header {
    pointer-events: none;
    user-select: none;

    span::after {
      @include tTemplates.animationLoading;
    }
  }
}